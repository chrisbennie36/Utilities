{
 "Resources": {
  "postgresvpc6F73F29B": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "recipe-randomizer-database-stack/postgres-vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "recipe-randomizer-database-stack/postgres-vpc/Resource"
   }
  },
  "postgresvpcPostgresDbPublicSubnetSubnet1Subnet41B19006": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PostgresDbPublicSubnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "recipe-randomizer-database-stack/postgres-vpc/PostgresDbPublicSubnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "postgresvpc6F73F29B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "recipe-randomizer-database-stack/postgres-vpc/PostgresDbPublicSubnetSubnet1/Subnet"
   }
  },
  "postgresvpcPostgresDbPublicSubnetSubnet1RouteTableD0CB2DED": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "recipe-randomizer-database-stack/postgres-vpc/PostgresDbPublicSubnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "postgresvpc6F73F29B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "recipe-randomizer-database-stack/postgres-vpc/PostgresDbPublicSubnetSubnet1/RouteTable"
   }
  },
  "postgresvpcPostgresDbPublicSubnetSubnet1RouteTableAssociation74F4308A": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "postgresvpcPostgresDbPublicSubnetSubnet1RouteTableD0CB2DED"
    },
    "SubnetId": {
     "Ref": "postgresvpcPostgresDbPublicSubnetSubnet1Subnet41B19006"
    }
   },
   "Metadata": {
    "aws:cdk:path": "recipe-randomizer-database-stack/postgres-vpc/PostgresDbPublicSubnetSubnet1/RouteTableAssociation"
   }
  },
  "postgresvpcPostgresDbPublicSubnetSubnet1DefaultRoute672CF40F": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "postgresvpcIGW4169B498"
    },
    "RouteTableId": {
     "Ref": "postgresvpcPostgresDbPublicSubnetSubnet1RouteTableD0CB2DED"
    }
   },
   "DependsOn": [
    "postgresvpcVPCGWD20C445D"
   ],
   "Metadata": {
    "aws:cdk:path": "recipe-randomizer-database-stack/postgres-vpc/PostgresDbPublicSubnetSubnet1/DefaultRoute"
   }
  },
  "postgresvpcPostgresDbPublicSubnetSubnet2Subnet8BE6B61E": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PostgresDbPublicSubnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "recipe-randomizer-database-stack/postgres-vpc/PostgresDbPublicSubnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "postgresvpc6F73F29B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "recipe-randomizer-database-stack/postgres-vpc/PostgresDbPublicSubnetSubnet2/Subnet"
   }
  },
  "postgresvpcPostgresDbPublicSubnetSubnet2RouteTableA8E6D74E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "recipe-randomizer-database-stack/postgres-vpc/PostgresDbPublicSubnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "postgresvpc6F73F29B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "recipe-randomizer-database-stack/postgres-vpc/PostgresDbPublicSubnetSubnet2/RouteTable"
   }
  },
  "postgresvpcPostgresDbPublicSubnetSubnet2RouteTableAssociation3B7AAFE7": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "postgresvpcPostgresDbPublicSubnetSubnet2RouteTableA8E6D74E"
    },
    "SubnetId": {
     "Ref": "postgresvpcPostgresDbPublicSubnetSubnet2Subnet8BE6B61E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "recipe-randomizer-database-stack/postgres-vpc/PostgresDbPublicSubnetSubnet2/RouteTableAssociation"
   }
  },
  "postgresvpcPostgresDbPublicSubnetSubnet2DefaultRoute03524F8B": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "postgresvpcIGW4169B498"
    },
    "RouteTableId": {
     "Ref": "postgresvpcPostgresDbPublicSubnetSubnet2RouteTableA8E6D74E"
    }
   },
   "DependsOn": [
    "postgresvpcVPCGWD20C445D"
   ],
   "Metadata": {
    "aws:cdk:path": "recipe-randomizer-database-stack/postgres-vpc/PostgresDbPublicSubnetSubnet2/DefaultRoute"
   }
  },
  "postgresvpcIGW4169B498": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "recipe-randomizer-database-stack/postgres-vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "recipe-randomizer-database-stack/postgres-vpc/IGW"
   }
  },
  "postgresvpcVPCGWD20C445D": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "postgresvpcIGW4169B498"
    },
    "VpcId": {
     "Ref": "postgresvpc6F73F29B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "recipe-randomizer-database-stack/postgres-vpc/VPCGW"
   }
  },
  "postgresvpcRestrictDefaultSecurityGroupCustomResource41658192": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "postgresvpc6F73F29B",
      "DefaultSecurityGroup"
     ]
    },
    "Account": {
     "Ref": "AWS::AccountId"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "recipe-randomizer-database-stack/postgres-vpc/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ec2:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":security-group/",
             {
              "Fn::GetAtt": [
               "postgresvpc6F73F29B",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "recipe-randomizer-database-stack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "recipe-randomizer-database-stack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200",
    "aws:asset:property": "Code"
   }
  },
  "dbsecuritygroupF2B234B9": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "recipe-randomizer-database-stack/db-security-group",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "192.168.178.220/32",
      "Description": "Development PC",
      "FromPort": 5275,
      "IpProtocol": "tcp",
      "ToPort": 5275
     },
     {
      "CidrIp": "100.79.164.189/32",
      "Description": "Personal Phone (4G)",
      "FromPort": 0,
      "IpProtocol": "tcp",
      "ToPort": 65535
     },
     {
      "CidrIp": "184.73.72.154/32",
      "Description": "UserServicePublicIp",
      "FromPort": 0,
      "IpProtocol": "tcp",
      "ToPort": 65535
     },
     {
      "CidrIp": "172.31.44.182/32",
      "Description": "UserServicePrivateIp",
      "FromPort": 0,
      "IpProtocol": "tcp",
      "ToPort": 65535
     },
     {
      "CidrIp": "34.205.203.205/32",
      "Description": "RecipeRandomizerPublicIp",
      "FromPort": 0,
      "IpProtocol": "tcp",
      "ToPort": 65535
     },
     {
      "CidrIp": "172.31.4.22/32",
      "Description": "RecipeRandomizerPrivateIp",
      "FromPort": 0,
      "IpProtocol": "tcp",
      "ToPort": 65535
     }
    ],
    "VpcId": {
     "Ref": "postgresvpc6F73F29B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "recipe-randomizer-database-stack/db-security-group/Resource"
   }
  },
  "reciperandomizerdbSubnetGroup78316A4F": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for recipe-randomizer-db database",
    "SubnetIds": [
     {
      "Ref": "postgresvpcPostgresDbPublicSubnetSubnet1Subnet41B19006"
     },
     {
      "Ref": "postgresvpcPostgresDbPublicSubnetSubnet2Subnet8BE6B61E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "recipe-randomizer-database-stack/recipe-randomizer-db/SubnetGroup/Default"
   }
  },
  "reciperandomizerdbSecret39B4985B": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Generated by the CDK for stack: ",
       {
        "Ref": "AWS::StackName"
       }
      ]
     ]
    },
    "GenerateSecretString": {
     "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
     "GenerateStringKey": "password",
     "PasswordLength": 30,
     "SecretStringTemplate": "{\"username\":\"postgres\"}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "recipe-randomizer-database-stack/recipe-randomizer-db/Secret/Resource"
   }
  },
  "reciperandomizerdbSecretAttachment5075E5A9": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "reciperandomizerdbSecret39B4985B"
    },
    "TargetId": {
     "Ref": "reciperandomizerdbFDCBF6B0"
    },
    "TargetType": "AWS::RDS::DBInstance"
   },
   "Metadata": {
    "aws:cdk:path": "recipe-randomizer-database-stack/recipe-randomizer-db/Secret/Attachment/Resource"
   }
  },
  "reciperandomizerdbFDCBF6B0": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllocatedStorage": "5",
    "BackupRetentionPeriod": 0,
    "CopyTagsToSnapshot": true,
    "DBInstanceClass": "db.t3.micro",
    "DBInstanceIdentifier": "recipe-randomizer-db-instance",
    "DBName": "Projects",
    "DBSubnetGroupName": {
     "Ref": "reciperandomizerdbSubnetGroup78316A4F"
    },
    "DeleteAutomatedBackups": true,
    "Engine": "postgres",
    "EngineVersion": "16.3",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "reciperandomizerdbSecret39B4985B"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MasterUsername": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "reciperandomizerdbSecret39B4985B"
       },
       ":SecretString:username::}}"
      ]
     ]
    },
    "Port": "5432",
    "PubliclyAccessible": true,
    "StorageType": "gp2",
    "VPCSecurityGroups": [
     {
      "Fn::GetAtt": [
       "dbsecuritygroupF2B234B9",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Snapshot",
   "DeletionPolicy": "Snapshot",
   "Metadata": {
    "aws:cdk:path": "recipe-randomizer-database-stack/recipe-randomizer-db/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/12QQW/CMAyFfwv3NFB2YJcdSjshDkOIIq6Tm5ougzpV7IJQ1f8+lQKtphz8/OVZz8lch4uFnk3gyoHJT8HZZrpJBcxJwZW/GzRz3Rwqo+IjHbax2tbZ2Zq0zgilY4PauVpwD9kZBz6wiNkZC2IdvcydWJOgJ5QVCF7h9oh5dJEImJ8SSVSKpvZWbivv6uoeMAat8jnrJgGBDBjXxAJkUPVbvGaS5Rg83Ska3z8hWT4nW8V3yiUQFOh100d2xr7swRcoow1fhv83bat2yK72BlVcs7hyaI801l9QVZaKf66tdxebo18Co4qYUVKB4u47Uuwot92vtipxskGZvuuZDsOp3nzuY+cxqqrggJ6to4/Lmw6noZ51Z/LL1ga+JrEl6l1f/wDQRRpnDgIAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "recipe-randomizer-database-stack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Mappings": {
  "LatestNodeRuntimeMap": {
   "af-south-1": {
    "value": "nodejs20.x"
   },
   "ap-east-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-2": {
    "value": "nodejs20.x"
   },
   "ap-northeast-3": {
    "value": "nodejs20.x"
   },
   "ap-south-1": {
    "value": "nodejs20.x"
   },
   "ap-south-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-1": {
    "value": "nodejs20.x"
   },
   "ap-southeast-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-3": {
    "value": "nodejs20.x"
   },
   "ap-southeast-4": {
    "value": "nodejs20.x"
   },
   "ap-southeast-5": {
    "value": "nodejs20.x"
   },
   "ap-southeast-7": {
    "value": "nodejs20.x"
   },
   "ca-central-1": {
    "value": "nodejs20.x"
   },
   "ca-west-1": {
    "value": "nodejs20.x"
   },
   "cn-north-1": {
    "value": "nodejs18.x"
   },
   "cn-northwest-1": {
    "value": "nodejs18.x"
   },
   "eu-central-1": {
    "value": "nodejs20.x"
   },
   "eu-central-2": {
    "value": "nodejs20.x"
   },
   "eu-north-1": {
    "value": "nodejs20.x"
   },
   "eu-south-1": {
    "value": "nodejs20.x"
   },
   "eu-south-2": {
    "value": "nodejs20.x"
   },
   "eu-west-1": {
    "value": "nodejs20.x"
   },
   "eu-west-2": {
    "value": "nodejs20.x"
   },
   "eu-west-3": {
    "value": "nodejs20.x"
   },
   "il-central-1": {
    "value": "nodejs20.x"
   },
   "me-central-1": {
    "value": "nodejs20.x"
   },
   "me-south-1": {
    "value": "nodejs20.x"
   },
   "mx-central-1": {
    "value": "nodejs20.x"
   },
   "sa-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-2": {
    "value": "nodejs20.x"
   },
   "us-west-1": {
    "value": "nodejs20.x"
   },
   "us-west-2": {
    "value": "nodejs20.x"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}